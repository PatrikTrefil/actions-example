name: Example workflow

on:
  push:
    branches: [main] # don't run workflow on pushes to other branches
  pull_request:
    branches: [main] # run workflow when a pull request is opened or updated
  workflow_dispatch: # allows manual trigger

jobs:
  nodejs-example:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nodejs-example
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3

      - name: Run example
        run: node index.js

  nodejs-example-parallel:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nodejs-example
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Run in parallel
        run: node index.js

  nodejs-example-dependency:
    runs-on: ubuntu-latest
    needs: [nodejs-example, nodejs-example-parallel]
    defaults:
      run:
        working-directory: nodejs-example
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
      - name: Run in parallel
        run: node index.js

  website-example:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: website-example
    env:
      # Secrets are configured on github.com in repository settings
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install --global vercel

      - name: Pull Vercel Environment Information
        run:
          vercel pull --yes --environment=production --token=${{
          secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  caching-example:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: caching-example
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          # The lock-file is not in the root of the repository so we need to specify the path
          cache-dependency-path: caching-example/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Run example
        run: npm run start

  matrix-example:
    strategy:
      # run for all combinations
      matrix:
        node-version: [16, 18]
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    defaults:
      run:
        working-directory: matrix-example
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Run example
        run: node index.js
